{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/router/react-router/src/Contact-components/ContactsBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useReducer } from 'react';\nimport MyHeader from \"./MyHeader\";\nimport ContactsList from \"./ContactsList\";\nimport MyPopUp from \"./UI/MyPopUp/MyPopUp\";\nimport SearchBar from \"./UI/SearchBar/SearchBar\";\nimport reducer, { MAIN_CONTACT_LIST } from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactsBook = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, MAIN_CONTACT_LIST);\n\n  const onContactDelete = contact => {\n    dispatch({\n      type: 'delete',\n      payload: contact.id\n    });\n  };\n\n  const filterHandler = useMemo(() => {\n    return state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filterContacts.toLowerCase()) || contact.surname.toLowerCase().includes(state.filterContacts.toLowerCase()) || contact.phone.toLowerCase().includes(state.filterContacts.toLowerCase()));\n  }, [state.contacts, state.filterContacts]);\n  const currentContactHandler = useMemo(() => {\n    return filterHandler.find(contact => contact.id === state.currentContactId);\n  }, [state.currentContactId, filterHandler]);\n\n  const closePopUp = () => {\n    dispatch({\n      type: 'closeContact',\n      payload: null\n    });\n  };\n\n  const saveNewChange = saveChangeHandler => {\n    dispatch({\n      type: 'saveContactChange',\n      payload: saveChangeHandler\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'container',\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: e => dispatch({\n        type: 'search',\n        payload: e.target.value\n      }),\n      value: state.filterContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n      contacts: filterHandler,\n      onContactDelete: onContactDelete,\n      buttonChange: id => dispatch({\n        type: 'currentContactId',\n        payload: id\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), typeof state.currentContactId === 'number' ? /*#__PURE__*/_jsxDEV(MyPopUp, {\n      currentContactHandler: currentContactHandler,\n      closePopUp: closePopUp,\n      saveNewChange: saveNewChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ContactsBook, \"zJFb74evDLCtMupztn++01DohiQ=\");\n\n_c = ContactsBook;\nexport default ContactsBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsBook\");","map":{"version":3,"names":["React","useState","useMemo","useReducer","MyHeader","ContactsList","MyPopUp","SearchBar","reducer","MAIN_CONTACT_LIST","ContactsBook","state","dispatch","onContactDelete","contact","type","payload","id","filterHandler","contacts","filter","name","toLowerCase","includes","filterContacts","surname","phone","currentContactHandler","find","currentContactId","closePopUp","saveNewChange","saveChangeHandler","e","target","value"],"sources":["/Users/user/Documents/React.Hillel/router/react-router/src/Contact-components/ContactsBook.js"],"sourcesContent":["import React, {useState, useMemo, useReducer} from 'react'\nimport MyHeader from \"./MyHeader\"\nimport ContactsList from \"./ContactsList\"\nimport MyPopUp from \"./UI/MyPopUp/MyPopUp\"\nimport SearchBar from \"./UI/SearchBar/SearchBar\"\nimport reducer, {MAIN_CONTACT_LIST} from \"./reducer\";\n\n\nconst ContactsBook = () => {\n\n\tconst [state, dispatch] = useReducer(reducer, MAIN_CONTACT_LIST);\n\n\tconst onContactDelete = (contact) => {\n\t\tdispatch({\n\t\t\ttype: 'delete',\n\t\t\tpayload: contact.id\n\t\t})\n\t}\n\n\tconst filterHandler = useMemo (() =>{\n\treturn state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filterContacts.toLowerCase())\n\t\t|| contact.surname.toLowerCase().includes(state.filterContacts.toLowerCase())\n\t\t|| contact.phone.toLowerCase().includes(state.filterContacts.toLowerCase()))\n\t}, [state.contacts, state.filterContacts])\n\n\n\tconst currentContactHandler = useMemo (() => {\n\t\treturn filterHandler.find(contact=>contact.id === state.currentContactId)\n\t}, [state.currentContactId, filterHandler])\n\n\n\tconst closePopUp = () => {\n\t\tdispatch(\n\t\t\t{\n\t\t\t\ttype: 'closeContact',\n\t\t\t\tpayload: null\n\t\t\t})\n\t}\n\n\tconst saveNewChange = (saveChangeHandler) => {\n\t  dispatch({\n\t\t\t  type: 'saveContactChange',\n\t\t\t  payload: saveChangeHandler\n\t\t  })\n\t}\n\n\treturn (\n\t\t<div className={'container'}>\n\t\t\t<MyHeader/>\n\t\t\t<SearchBar\n\t\t\t\tonSearch={e=>\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'search',\n\t\t\t\t\t\t\tpayload: e.target.value\n\t\t\t\t\t\t})}\n\t\t\t\tvalue={state.filterContacts}\n\t\t\t/>\n\t\t\t<ContactsList\n\t\t\t\tcontacts={filterHandler}\n\t\t\t\tonContactDelete={onContactDelete}\n\t\t\t\tbuttonChange={(id)=>dispatch(\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'currentContactId',\n\t\t\t\t\t\tpayload: id\n\t\t\t\t\t})}\n\t\t\t/>\n\n\t\t\t{\n\t\t\t\t(typeof state.currentContactId === 'number' )\n\t\t\t\t? <MyPopUp\n\t\t\t\t\t\tcurrentContactHandler={currentContactHandler}\n\t\t\t\t\t\tclosePopUp={closePopUp}\n\t\t\t\t\t\tsaveNewChange={saveNewChange}\n\t\t\t\t\t/>\n\t\t\t\t: <></>\n\t\t\t}\n\n\t\t</div>\n\t)\n}\n\nexport default ContactsBook"],"mappings":"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"},"metadata":{},"sourceType":"module"}