{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/router/react-router/src/Todo-components/components/leftSidebar/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport './styles/TodoForm.css';\nimport { useMemo, useState } from \"react\";\nimport TodoAdd from \"./TodoAdd\";\nimport React from \"react\";\nimport { TodoList } from \"./TodoList\";\nimport { TodoSearchForm } from \"./TodoSearchForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoForm(props) {\n  _s();\n\n  const [lists, setLists] = useState([{\n    id: 1,\n    title: 'Clean the flat',\n    completed: false,\n    description: 'прибраться в комнате получше'\n  }, {\n    id: 2,\n    title: 'Garbage',\n    completed: false,\n    description: ''\n  }, {\n    id: 3,\n    title: 'Prepare dinner',\n    completed: false,\n    description: ''\n  }]);\n  console.log(lists);\n\n  const createItem = newItem => {\n    setLists([...lists, newItem]);\n  };\n\n  const [filter, setFilter] = useState({\n    query: ''\n  });\n  const sortedList = useMemo(() => {\n    if (filter.query) {\n      return sortedList.filter(list => list.title.toLowerCase().includes(filter.query));\n    }\n\n    return lists;\n  }, [filter.sort, lists]);\n  const sortedAndSearchLists = useMemo(() => {\n    return sortedList.filter(list => list.title.toLowerCase().includes(filter.query));\n  }, [filter.query, sortedList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TodoSearchForm, {\n        filter: filter,\n        setFilter: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        lists: sortedAndSearchLists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoAdd, {\n        create: createItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"AN+OXXwgQ0poUilScpumyGsTF6o=\");\n\n_c = TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useMemo","useState","TodoAdd","React","TodoList","TodoSearchForm","TodoForm","props","lists","setLists","id","title","completed","description","console","log","createItem","newItem","filter","setFilter","query","sortedList","list","toLowerCase","includes","sort","sortedAndSearchLists"],"sources":["/Users/user/Documents/React.Hillel/router/react-router/src/Todo-components/components/leftSidebar/TodoForm.js"],"sourcesContent":["import './styles/TodoForm.css'\nimport {useMemo, useState} from \"react\";\nimport TodoAdd from \"./TodoAdd\";\nimport React from \"react\";\nimport {TodoList} from \"./TodoList\";\nimport {TodoSearchForm} from \"./TodoSearchForm\";\n\nexport function TodoForm(props) {\n\n    const [lists, setLists] = useState([\n        {id:1, title: 'Clean the flat', completed: false, description: 'прибраться в комнате получше'},\n        {id:2, title: 'Garbage', completed: false, description: ''},\n        {id:3, title: 'Prepare dinner', completed: false, description: ''}\n    ])\n\n    console.log(lists);\n\n    const createItem = (newItem) => {\n        setLists([...lists, newItem])\n    }\n\n    const [filter, setFilter] = useState({query: ''})\n\nconst sortedList = useMemo(()=>{\n    if (filter.query){\n        return sortedList.filter(list=>list.title.toLowerCase().includes(filter.query))\n    }\n    return lists;\n}, [filter.sort, lists])\n\n    const sortedAndSearchLists = useMemo(()=>{\n        return sortedList.filter(list=>list.title.toLowerCase().includes(filter.query))\n    },[filter.query, sortedList])\n\n\n    return (\n        <div className='mainForm'>\n            <form\n            >\n               <TodoSearchForm\n               filter={filter}\n               setFilter={setFilter}\n               />\n                <TodoList\n                    lists={sortedAndSearchLists}\n                />\n             <TodoAdd create={createItem}/>\n            </form>\n        </div>\n    )\n}\n"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAAQA,OAAR,EAAiBC,QAAjB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAE5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAC/B;IAACS,EAAE,EAAC,CAAJ;IAAOC,KAAK,EAAE,gBAAd;IAAgCC,SAAS,EAAE,KAA3C;IAAkDC,WAAW,EAAE;EAA/D,CAD+B,EAE/B;IAACH,EAAE,EAAC,CAAJ;IAAOC,KAAK,EAAE,SAAd;IAAyBC,SAAS,EAAE,KAApC;IAA2CC,WAAW,EAAE;EAAxD,CAF+B,EAG/B;IAACH,EAAE,EAAC,CAAJ;IAAOC,KAAK,EAAE,gBAAd;IAAgCC,SAAS,EAAE,KAA3C;IAAkDC,WAAW,EAAE;EAA/D,CAH+B,CAAD,CAAlC;EAMAC,OAAO,CAACC,GAAR,CAAYP,KAAZ;;EAEA,MAAMQ,UAAU,GAAIC,OAAD,IAAa;IAC5BR,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWS,OAAX,CAAD,CAAR;EACH,CAFD;;EAIA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC;IAACmB,KAAK,EAAE;EAAR,CAAD,CAApC;EAEJ,MAAMC,UAAU,GAAGrB,OAAO,CAAC,MAAI;IAC3B,IAAIkB,MAAM,CAACE,KAAX,EAAiB;MACb,OAAOC,UAAU,CAACH,MAAX,CAAkBI,IAAI,IAAEA,IAAI,CAACX,KAAL,CAAWY,WAAX,GAAyBC,QAAzB,CAAkCN,MAAM,CAACE,KAAzC,CAAxB,CAAP;IACH;;IACD,OAAOZ,KAAP;EACH,CALyB,EAKvB,CAACU,MAAM,CAACO,IAAR,EAAcjB,KAAd,CALuB,CAA1B;EAOI,MAAMkB,oBAAoB,GAAG1B,OAAO,CAAC,MAAI;IACrC,OAAOqB,UAAU,CAACH,MAAX,CAAkBI,IAAI,IAAEA,IAAI,CAACX,KAAL,CAAWY,WAAX,GAAyBC,QAAzB,CAAkCN,MAAM,CAACE,KAAzC,CAAxB,CAAP;EACH,CAFmC,EAElC,CAACF,MAAM,CAACE,KAAR,EAAeC,UAAf,CAFkC,CAApC;EAKA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,uBACI;MAAA,wBAEG,QAAC,cAAD;QACA,MAAM,EAAEH,MADR;QAEA,SAAS,EAAEC;MAFX;QAAA;QAAA;QAAA;MAAA,QAFH,eAMI,QAAC,QAAD;QACI,KAAK,EAAEO;MADX;QAAA;QAAA;QAAA;MAAA,QANJ,eASC,QAAC,OAAD;QAAS,MAAM,EAAEV;MAAjB;QAAA;QAAA;QAAA;MAAA,QATD;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;GA3CeV,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}